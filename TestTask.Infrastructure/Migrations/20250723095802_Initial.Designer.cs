// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestTask.Infrastructure;

#nullable disable

namespace TestTask.Infrastructure.Migrations
{
    [DbContext(typeof(TestTaskDbContext))]
    [Migration("20250723095802_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestTask.Infrastructure.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datetime");

                    b.Property<int?>("Entity")
                        .HasColumnType("integer")
                        .HasColumnName("entity");

                    b.Property<int?>("Eventinfo")
                        .HasColumnType("integer")
                        .HasColumnName("eventinfo");

                    b.Property<string>("Fieldname")
                        .HasColumnType("text")
                        .HasColumnName("fieldname");

                    b.Property<Guid?>("Logguid")
                        .HasColumnType("uuid")
                        .HasColumnName("logguid");

                    b.Property<Guid?>("Logguidlinked")
                        .HasColumnType("uuid")
                        .HasColumnName("logguidlinked");

                    b.Property<string>("Newvalue")
                        .HasColumnType("text")
                        .HasColumnName("newvalue");

                    b.Property<string>("Oldvalue")
                        .HasColumnType("text")
                        .HasColumnName("oldvalue");

                    b.Property<int>("Recordtype")
                        .HasColumnType("integer")
                        .HasColumnName("recordtype");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user");

                    b.HasKey("Id")
                        .HasName("logs_pkey");

                    b.ToTable("logs");
                });
#pragma warning restore 612, 618
        }
    }
}
